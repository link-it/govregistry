openapi: 3.0.3
info:
  title: GovHub Management Backoffice - OpenAPI 3.0
  x-summary: |-
    Backoffice GovHub
  description: |-
    Servizio per il backoffice condiviso delle applicazioni di govhub. 
  x-api-id: management-govhub
  termsOfService: TODO
  contact:
    name: TODO
    email: TODO@TODO.it
  license:
    name: Apache 2.0 ( TODO )
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://govhub.backoffice.it/api/v3
    description: Url di test dell'API
tags:
  - name: user
    description: Operations on users    
paths:
  /users:
    post:
      tags:
        - user
      summary: Add a new user
      description: Add a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          $ref: "#/components/responses/400BadRequest"
        '401':
          $ref: "#/components/responses/401Unauthorized"
        '403':
          $ref: "#/components/responses/403Forbidden"
        '429':
          $ref: "#/components/responses/429TooManyRequests"
        '503':
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/ResponseDefault"
  /status:
    get:
      tags:
        - user
      summary: Add a new user
      description: Get the system status
      operationId: status
      responses:
        '200':
          description: Successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'          
        '400':
          $ref: "#/components/responses/400BadRequest"
        '401':
          $ref: "#/components/responses/401Unauthorized"
        '403':
          $ref: "#/components/responses/403Forbidden"
        '429':
          $ref: "#/components/responses/429TooManyRequests"
        '503':
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/ResponseDefault"


  
components:

   # RESPONSES ---------------
   
   responses:
      '201Created':
         description: Resource created
         headers:
           Location:
             $ref: "#/components/headers/Location"
           Cache-Control:
              $ref: "#/components/headers/Cache-Control"

      '400BadRequest':
         description: "Bad Request"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      '401Unauthorized':
         description: "Non sono state fornite le credenziali necessarie"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      '403Forbidden':
         description: "Autorizzazione non concessa per l'operazione richiesta"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      '404NotFound':
         description: "Not Found"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      '409Conflict':
         description: "Conflict (L'entità che si vuole creare risulta già esistente)"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      '429TooManyRequests':
         description: "Too many requests"
         headers:
           Retry-After:
             $ref: "#/components/headers/Retry-After"
           X-RateLimit-Limit:
             $ref: "#/components/headers/X-RateLimit-Limit"
           X-RateLimit-Remaining:
             $ref: "#/components/headers/X-RateLimit-Remaining"
           X-RateLimit-Reset:
             $ref: "#/components/headers/X-RateLimit-Reset"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      '503ServiceUnavailable':
         description: "Service Unavailable"
         headers:
           Retry-After:
             $ref: "#/components/headers/Retry-After"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
      'ResponseDefault':
         description: "Unexpected error"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
            
    
   # HEADERS ---------------- #
   
                   
   headers:
      Location:
         description: >
             Header Location inserito in una risposta ad una richiesta POST
             terminata con successo 'http 201'. L'header indica l'id dell'oggetto creato.
         schema:
           type: string
           format: url
      Cache-Control:
        description: Management of objects cache, no-cache is the only supported option
        schema:          
          type: string
      Retry-After:
         description: "Riprovare dopo un attesa minima di tot secondi. Vedi https://tools.ietf.org/html/rfc7231#section-7.1.3"
         schema:
           type: integer
           format: int32
      X-RateLimit-Limit:
         description: "Numero massimo di richieste accettate nell'intervallo corrente"
         schema:
           type: integer
           format: int32
      X-RateLimit-Remaining:
         description: "Numero di richieste residue nell'intervallo corrente"
         schema:
           type: integer
           format: int32
      X-RateLimit-Reset:
         description: "Numero di secondi al completamento dell'intervallo corrente"
         schema:
           type: integer
           format: int32
           
           
   # SCHEMAS ---------------- #
   
   
   schemas:
      UserCreate:
         $ref: "#/components/schemas/User"
      User:
         type: object
         properties:
            principal:
               type: string
            full_name:
               type: string
            email:
               type: string
               format: email
            enabled:
               type: boolean
         required:
            - principal
            - name
            - email
            - enabled
      Problem:
         type: object
         properties:
           detail:
             type: string
             description: Un testo di descrizione comprensibile del problema occorso
             example: Connection to database timed out
           instance:
             type: string
             description: Collegamento ad una specifica occorrenza dove si è verificato il problema
             format: uri
           status:
             maximum: 600
             exclusiveMaximum: true
             minimum: 100
             type: integer
             description: Codice http restituito
             format: int32
             example: 503
           title:
             type: string
             description: Descrizione breve ed esplicativa del problema occorso
           type:
             type: string
             description: URI assoluta per la descrizione del problema occorso
             format: uri
             example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
             default: about:blank
         