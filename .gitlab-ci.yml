stages:
    - test
    - build
    - deploy
    - upload
    - release

variables: 
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
    SONAR_HOST_URL: "http://localsonarqube:9000/"
    SONAR_TOKEN: "squ_35c667f3567119d5702ffa5fb92ca6eaac5889a6"
    SONAR_USER: "gitlab-runner"
    SONAR_PASSWORD: "Password@123"
    DEPLOY_STAGING_SSH_HOST: "ec2-user@172.16.1.121"
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/govregistry/${CI_COMMIT_TAG}"
default:
    cache:
        paths:
            - .m2/repository/
            - target/
    image: maven:3-openjdk-11

test:
    stage: test
    script:
      - mvn clean verify sonar:sonar -U
    rules:
      - if: $CI_COMMIT_BRANCH == "staging"
        allow_failure: true
      - if: $CI_COMMIT_BRANCH != "staging"
        allow_failure: false
    artifacts:
        untracked: false
        name: test_and_coverage_report
        reports:
          junit: [ api/target/surefire-reports/*.xml ]
        expire_in: "1 week"

build_war:
    stage: build
    script:
      - mkdir ~/.ssh
      - chmod 700 ~/.ssh 
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - mvn -s /tmp/maven_settings/settings-repo_linkit.xml -U deploy -Pwar -DskipTests=true 
    artifacts:
        paths:
          - api/target/govregistry.war
    rules:
      - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "staging"'

build_jar:
    stage: build
    script:
      - mkdir ~/.ssh
      - chmod 700 ~/.ssh
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - mvn -s /tmp/maven_settings/settings-repo_linkit.xml -U deploy -DskipTests=true
    artifacts:
        paths:
          - api/target/govregistry.jar
    rules:
      - if: '$CI_COMMIT_TAG'        

upload:
    stage: upload
    image: curlimages/curl:latest
    rules:
        - if: $CI_COMMIT_TAG
    script:
        - 'curl -k --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file api/target/govregistry.war ${PACKAGE_REGISTRY_URL}/govregistry-${CI_COMMIT_TAG}.war'
        - 'curl -k --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file api/target/govregistry.jar ${PACKAGE_REGISTRY_URL}/govregistry-${CI_COMMIT_TAG}.jar'          

release:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    rules:
        - if: $CI_COMMIT_TAG
    before_script:
        - apk --no-cache add openssl ca-certificates
        - mkdir -p /usr/local/share/ca-certificates/extra
        - openssl s_client -connect ${CI_SERVER_HOST}:${CI_SERVER_PORT} -servername ${CI_SERVER_HOST} -showcerts </dev/null 2>/dev/null | sed -e '/-----BEGIN/,/-----END/!d' | tee "/usr/local/share/ca-certificates/${CI_SERVER_HOST}.crt" >/dev/null
        - update-ca-certificates
    script:
        - 'release-cli create --name "govregistry-$CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG 
          --assets-link "[ 
            {\"name\":\"govregistry-${CI_COMMIT_TAG}.war\", \"url\":\"${PACKAGE_REGISTRY_URL}/govregistry-${CI_COMMIT_TAG}.war\"},
            {\"name\":\"govregistry-${CI_COMMIT_TAG}.jar\", \"url\":\"${PACKAGE_REGISTRY_URL}/govregistry-${CI_COMMIT_TAG}.jar\"}
          ]"'

deploy_staging:
  stage: deploy
  image: kroniak/ssh-client
  script:
    - cp -r /tmp/ssh/ ~/.ssh
    - scp -r api/target/govregistry.war $DEPLOY_STAGING_SSH_HOST:/tmp/
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo systemctl stop tomcat'
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo cp -r /tmp/govregistry.war /opt/apache-tomcat-9.0.70/webapps/'  
    - ssh $DEPLOY_STAGING_SSH_HOST 'sudo systemctl start tomcat'
  only:
    - staging
