openapi: 3.0.3

info:
  title: GovHub Commons API - OpenAPI 3.0
  x-summary: GovHub Commons API
  description: This API Describes the common beans of the GovHub ecosystem
  x-api-id: govhub-commons
  termsOfService: TODO
  version: 1.0.1
  contact:
    name: TODO
    email: TODO@TODO.it

  license:
    name: Apache 2.0 ( TODO )
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:    
   /profile:
       get:
         tags:
           - profile
         summary: Retrieve the user profile.
         description: Retrieve the  logged user profile.
         operationId: profile
         responses:
           '200':
             description: Successful operation.
             content:
               application/json:
                 schema:
                   $ref: '#/components/schemas/Profile'          
           '400':
             $ref: "#/components/responses/400BadRequest"
           '401':
             $ref: "#/components/responses/401Unauthorized"
           '403':
             $ref: "#/components/responses/403Forbidden"
           '404':
             $ref: "#/components/responses/404NotFound"
           '429':
             $ref: "#/components/responses/429TooManyRequests"
           '503':
             $ref: "#/components/responses/503ServiceUnavailable"
           default:
             $ref: "#/components/responses/ResponseDefault"

   /users/{id}:
    parameters:
      - $ref: "#/components/parameters/user_id"    
    get:
      tags:
        - user
      summary: Retrieve a user.
      description: Retrieve the user with the provided id.
      operationId: readUser
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          $ref: "#/components/responses/400BadRequest"
        '401':
          $ref: "#/components/responses/401Unauthorized"
        '403':
          $ref: "#/components/responses/403Forbidden"
        '404':
          $ref: "#/components/responses/404NotFound"
        '429':
          $ref: "#/components/responses/429TooManyRequests"
        '503':
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          $ref: "#/components/responses/ResponseDefault"
          
    /organizations/{id}:
    parameters:
      - $ref: "govhub-api-commons.yaml#/components/parameters/organization_id"    
    get:
      tags:
        - organization
      summary: Retrieve an Organization.
      description: Retrieve the Organization with the provided id.
      operationId: readOrganization
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'          
        '400':
          $ref: "govhub-api-commons.yaml#/components/responses/400BadRequest"
        '401':
          $ref: "govhub-api-commons.yaml#/components/responses/401Unauthorized"
        '403':
          $ref: "govhub-api-commons.yaml#/components/responses/403Forbidden"
        '404':
          $ref: "govhub-api-commons.yaml#/components/responses/404NotFound"
        '429':
          $ref: "govhub-api-commons.yaml#/components/responses/429TooManyRequests"
        '503':
          $ref: "govhub-api-commons.yaml#/components/responses/503ServiceUnavailable"
        default:
          $ref: "govhub-api-commons.yaml#/components/responses/ResponseDefault"   
  
components:

   parameters:
   
      user_id:
         name: id
         in: path
         required: true
         schema:
            $ref: "#/components/schemas/UserId"
  
      organization_id:
         name: id
         in: path
         required: true
         schema:
            $ref: "#/components/schemas/OrganizationId"
   
      sort_direction_query:
         name: sort_direction
         in: query
         description: Direction Sorting field.
         required: true
         schema:
            $ref: "#/components/schemas/Direction"
            
      limit:
         name: limit
         in: query
         description: Max number of provided items.
         required: false
         schema:
           type: integer
           format: int32
           minimum: 1
           maximum: 100
           
      offset:
         name: offset
         in: query
         description: offset (zero-based) of indexed results.
         required: false
         schema:
           type: integer
           format: int64
           default: 0
           minimum: 0
           maximum: 9223372036854775807
        
      q_query:
         name: q
         in: query
         description: generic query.
         required: false
         schema:
            $ref: "#/components/schemas/GenericSearchString"

   responses:
   
      '201Created':
         description: Resource created.
         headers:
           Location:
             $ref: "#/components/headers/Location"
           Cache-Control:
              $ref: "#/components/headers/Cache-Control"
           X-RateLimit-Limit:
              $ref: "#/components/headers/X-RateLimit-Limit"
           X-RateLimit-Remaining:
              $ref: "#/components/headers/X-RateLimit-Remaining"
           X-RateLimit-Reset:
             $ref: "#/components/headers/X-RateLimit-Reset"

      '400BadRequest':
         description: Bad Request.
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      '401Unauthorized':
         description: Required credentials missing.
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      '403Forbidden':
         description: No Authorizations for the requested operation.
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      '404NotFound':
         description: Not Found.
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      '409Conflict':
         description: Conflict (The entity already exists).
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      '429TooManyRequests':
         description: Too many requests.
         headers:
           Retry-After:
             $ref: "#/components/headers/Retry-After"
           X-RateLimit-Limit:
             $ref: "#/components/headers/X-RateLimit-Limit"
           X-RateLimit-Remaining:
             $ref: "#/components/headers/X-RateLimit-Remaining"
           X-RateLimit-Reset:
             $ref: "#/components/headers/X-RateLimit-Reset"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      '503ServiceUnavailable':
         description: Service Unavailable.
         headers:
           Retry-After:
             $ref: "#/components/headers/Retry-After"
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
      'ResponseDefault':
         description: Unexpected error.
         content:
           application/problem+json:
             schema:
               $ref: "#/components/schemas/Problem"
               
   headers: 
      Location:
         description: >
             Header Location inserted in a response for a succesful POST request (201)
             The value is a link that points to the created object.
         schema:
           type: string
           format: url
           maxLength: 255
           
      Cache-Control:
        description: Management of objects cache, no-cache is the only supported option.
        schema:          
          type: string
          pattern: ^[\w, -=]+$
          maxLength: 255
          
      Retry-After:
         description: "Retry after a window of n seconds. See https://tools.ietf.org/html/rfc7231#section-7.1.3"
         schema:
           type: integer
           format: int32
           minimum: 0
           maximum: 2147483647
           
      X-RateLimit-Limit:
         description: Maximum number of allowed requests in the current time window.
         schema:
           type: integer
           format: int32
           minimum: 0
           maximum: 2147483647
           
      X-RateLimit-Remaining:
         description: Number of remaining requests in the current time window.
         schema:
           type: integer
           format: int32
           minimum: 0
           maximum: 2147483647
           
      X-RateLimit-Reset:
         description: Seconds left until the next time window.
         schema:
           type: integer
           format: int32
           minimum: 0
           maximum: 2147483647


   schemas:
   
      Profile:
           type: object
           additionalProperties: false
           properties:
              authorizations:
                 type: array
                 items:
                    $ref: "#/components/schemas/Authorization"
                 minItems: 0
                 maxItems: 2147483647
              principal:
                  type: string
                  maxLength: 255
                  pattern: ^[\w_\-\.]+$
                  example: user-1
              full_name:
                  type: string
                  maxLength: 255               
                  pattern: ^.*$
                  example: Antonio Giscardi
              email:
                  type: string
                  format: email
                  maxLength: 255
              enabled:
                  type: boolean
              id:
                 type: integer
                 format: int64
                 minimum: 0
                 maximum: 9223372036854775807
                 example: 1
                 description: User identifier.
           required:
            - principal
            - full_name
            - enabled            
             - id
             
      UserCreate:
         type: object
         additionalProperties: false
         properties:
            principal:
               type: string
               maxLength: 255
               pattern: ^[\w_\-\.]+$
               example: user-1
            full_name:
               type: string
               maxLength: 255               
               pattern: ^.*$
               example: Antonio Giscardi
            email:
               type: string
               format: email
               maxLength: 255
            enabled:
               type: boolean
         required:
            - principal
            - full_name
            - enabled            
         
      User:         
         allOf:
            - $ref: "#/components/schemas/UserCreate"
            - type: object         
              additionalProperties: false
              required:
                - id
              properties:
                  id:
                     $ref: "#/components/schemas/UserId"       
             
      Authorization:
         type: object
         additionalProperties: false
         required:
            - id
            - role
         properties:
            id:
               $ref: "#/components/schemas/AuthorizationId"
            role:
               $ref: "#/components/schemas/Role"
            organizations:
               type: array
               items:
                  $ref: "#/components/schemas/OrganizationAuthItem"
               minItems: 0
               maxItems: 2147483647
            services:
               type: array
               items:
                  $ref: "#/components/schemas/ServiceAuthItem"
               minItems: 0
               maxItems: 2147483647
            expiration_date:
               type: string
               format: date-time
               
      OrganizationAuthItem:
         type: object
         additionalProperties: false
         required:
            - id
            - legal_name
            - tax_code
         properties:
            id:
               $ref: "#/components/schemas/OrganizationId"
            legal_name:
               $ref: "#/components/schemas/LegalName"
            tax_code:
               $ref: "#/components/schemas/TaxCode"
               
      UserId:
         type: integer
         format: int64
         minimum: 0
         maximum: 9223372036854775807
         example: 1
         description: User identifier.
         
      OrganizationId:
         type: integer
         format: int64
         minimum: 0
         maximum: 9223372036854775807
         example: 1
         description: Organization identifier. 
      
      
      AuthorizationId:
         type: integer
         format: int64
         minimum: 0
         maximum: 9223372036854775807
         example: 1
         description: Authorization identifier.
         
      ServiceId:
         type: integer
         format: int64
         minimum: 0
         maximum: 9223372036854775807
         example: 1
         description: Service identifier.          
         
      ServiceAuthItem:
         type: object
         additionalProperties: false
         properties:
            id: 
               $ref: "#/components/schemas/ServiceId"         
            service_name:
               $ref: "#/components/schemas/ServiceName"
               
      ServiceName:
         type: string
         pattern: .*
         maxLength: 256
         example: SUAP-Integrazione
         
      PhoneNumber:
        maxLength: 255
        type: string
        example: "0124581247"
        pattern: ^(\+|00)?[0-9 \-\(\)\.]{7,32}$

      Email:
       maxLength: 255
       type: string
       format: email
       example: "m.rossi@acme.com"

      Logo:
        type: string
        format: base64
        maxLength: 200000

      SmallLogo:
        type: string
        format: base64
        maxLength: 50000
            
      TaxCode:
        type: string
        minLength: 11
        maxLength: 11
        pattern: ^[0-9]+$
        example: "01234567890"
        
      LegalName:
         type: string
         maxLength: 80
         pattern: ^([\x20-\xFF]{1,80})$
         example: Giletti S.R.L.
               
      Role:
         type: object
         additionalProperties: false
         required:
            - id
            - role_name
         properties:
            id: 
               $ref: "#/components/schemas/RoleId"
            role_name:
               type: string
               pattern: .+
               maxLength: 256
               example: govhub-sender
            assignable_roles:
               type: array
               minItems: 0
               maxItems: 256
               items:
                  type: string
                  pattern: .+
                  maxLength: 256
                  example: govhub-sender   
      
      RoleId:
         type: integer
         format: int64
         minimum: 0
         maximum: 9223372036854775807
         example: 1
         description: Role identifier.
         
      GenericSearchString:
         type: string
         maxLength: 255
         example: "user_1"
         pattern: ^[^\u0000]*$      
         
      Problem:
         type: object
         additionalProperties: false
         properties:
           detail:
             type: string
             description: A human readable description of the occurred problem.
             example: Connection to database timed out
             maxLength: 255
             pattern: ^[ -~]+$
           instance:
             type: string
             description: Link to a specific occurence of the problem.
             format: uri
             maxLength: 255
           status:
             maximum: 600
             exclusiveMaximum: true
             minimum: 100
             type: integer
             description: HTTP Status Code.
             format: int32
             example: 503
           title:
             type: string
             description: Short description of the occurred problem.
             maxLength: 255
             pattern: ^[ -~]+$
             example: Service Unavailable        
           type:
             type: string
             description: Absolute URI for the problem description.
             maxLength: 255
             format: uri
             example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
             default: about:blank
             
      Direction:
         type: string
         enum:
            - asc
            - desc
         default: desc
         
      PatchOperations:
         type: "array"
         minItems: 1
         maxItems: 20
         items:
            $ref: "#/components/schemas/PatchOp"
         
      PatchOp:
         type: object
         required:
           - op
           - path
         additionalProperties: false
         properties:
           op:
             type: string
             enum:
               - add
               - remove
               - replace
             description: Specified operation.
             example: add
           path:
             type: string
             description: jsonPath of the mutating object.
             example: "/organizations"
             pattern: ^.*$
             maxLength: 4096
           value:
             type: object
             description: updating value.
             
      List:
         required:
         - page
         type: object
         additionalProperties: false
         properties:
          page:
             $ref: "#/components/schemas/PageInfo" 
          # I links li aggiunge spring hateoas
          #_links:
          #   $ref: "#/components/schemas/PaginationLinks"
                    
      PageInfo:
         type: object
         additionalProperties: false
         required:
            - offset
            - limit
         properties:
           offset:
             type: integer
             description: Offset value (zero-based) for the results.
             format: int64
             minimum: 0
             maximum: 9223372036854775807
             example: 20
           limit:
             type: integer
             description: numero massimo di elementi restituiti.
             format: int32
             minimum: 0
             maximum: 2147483647
             example: 25
           total:
               minimum: 0
               maximum: 9223372036854775807
               type: integer
               description: Number of found elements.
               format: int64
               example: 32         
                                      